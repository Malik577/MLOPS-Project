Model type: gradient_boosting
Parameters: {'memory': None, 'steps': [('preprocessor', ColumnTransformer(transformers=[('num',
                                 Pipeline(steps=[('scaler', StandardScaler())]),
                                 ['age', 'balance', 'day', 'duration',
                                  'campaign', 'pdays', 'previous']),
                                ('cat',
                                 Pipeline(steps=[('onehot',
                                                  OneHotEncoder(handle_unknown='ignore'))]),
                                 ['job', 'marital', 'education', 'default',
                                  'housing', 'loan', 'contact', 'month',
                                  'poutcome'])])), ('model', GradientBoostingClassifier())], 'transform_input': None, 'verbose': False, 'preprocessor': ColumnTransformer(transformers=[('num',
                                 Pipeline(steps=[('scaler', StandardScaler())]),
                                 ['age', 'balance', 'day', 'duration',
                                  'campaign', 'pdays', 'previous']),
                                ('cat',
                                 Pipeline(steps=[('onehot',
                                                  OneHotEncoder(handle_unknown='ignore'))]),
                                 ['job', 'marital', 'education', 'default',
                                  'housing', 'loan', 'contact', 'month',
                                  'poutcome'])]), 'model': GradientBoostingClassifier(), 'preprocessor__force_int_remainder_cols': True, 'preprocessor__n_jobs': None, 'preprocessor__remainder': 'drop', 'preprocessor__sparse_threshold': 0.3, 'preprocessor__transformer_weights': None, 'preprocessor__transformers': [('num', Pipeline(steps=[('scaler', StandardScaler())]), ['age', 'balance', 'day', 'duration', 'campaign', 'pdays', 'previous']), ('cat', Pipeline(steps=[('onehot', OneHotEncoder(handle_unknown='ignore'))]), ['job', 'marital', 'education', 'default', 'housing', 'loan', 'contact', 'month', 'poutcome'])], 'preprocessor__verbose': False, 'preprocessor__verbose_feature_names_out': True, 'preprocessor__num': Pipeline(steps=[('scaler', StandardScaler())]), 'preprocessor__cat': Pipeline(steps=[('onehot', OneHotEncoder(handle_unknown='ignore'))]), 'preprocessor__num__memory': None, 'preprocessor__num__steps': [('scaler', StandardScaler())], 'preprocessor__num__transform_input': None, 'preprocessor__num__verbose': False, 'preprocessor__num__scaler': StandardScaler(), 'preprocessor__num__scaler__copy': True, 'preprocessor__num__scaler__with_mean': True, 'preprocessor__num__scaler__with_std': True, 'preprocessor__cat__memory': None, 'preprocessor__cat__steps': [('onehot', OneHotEncoder(handle_unknown='ignore'))], 'preprocessor__cat__transform_input': None, 'preprocessor__cat__verbose': False, 'preprocessor__cat__onehot': OneHotEncoder(handle_unknown='ignore'), 'preprocessor__cat__onehot__categories': 'auto', 'preprocessor__cat__onehot__drop': None, 'preprocessor__cat__onehot__dtype': <class 'numpy.float64'>, 'preprocessor__cat__onehot__feature_name_combiner': 'concat', 'preprocessor__cat__onehot__handle_unknown': 'ignore', 'preprocessor__cat__onehot__max_categories': None, 'preprocessor__cat__onehot__min_frequency': None, 'preprocessor__cat__onehot__sparse_output': True, 'model__ccp_alpha': 0.0, 'model__criterion': 'friedman_mse', 'model__init': None, 'model__learning_rate': 0.1, 'model__loss': 'log_loss', 'model__max_depth': 3, 'model__max_features': None, 'model__max_leaf_nodes': None, 'model__min_impurity_decrease': 0.0, 'model__min_samples_leaf': 1, 'model__min_samples_split': 2, 'model__min_weight_fraction_leaf': 0.0, 'model__n_estimators': 100, 'model__n_iter_no_change': None, 'model__random_state': None, 'model__subsample': 1.0, 'model__tol': 0.0001, 'model__validation_fraction': 0.1, 'model__verbose': 0, 'model__warm_start': False}
Metrics: {'accuracy': 0.8983425414364641, 'precision': 0.55, 'recall': 0.336734693877551, 'f1': 0.4177215189873418, 'roc_auc': np.float64(0.9174316566775408)}
